using System.Windows.Forms;
using System;
using System.Linq;
using System.Drawing;
namespace ns_d_code
{
    public class cls_Main
    {
        public static void Main() //main entry point:
        {
		    //do nothing;
        }

        public static string test(Form f) //validation sub:
        {
			cls_output_controller cls_output_controller = new cls_output_controller();
			 //----------------------------------------------->
            // validation code start:
            //----------------------------------------------->
            //форма:
            if (f is Form)
            {
                cls_output_controller._add_validation_ok("Form  присутня!", 20);
            }
            else
            {
                cls_output_controller._add_validation_failed("Form відсутня!", 0);
            }

			
			//===========================================================>
			//find button via reflection:
            Control c = f.Controls.Find("button1", true)[0];
            Button tbx = (Button)c;

			//activate Form:
			f.Show();

			//emulate button click:
			tbx.PerformClick();
			
			//pump messages:
			Application.DoEvents();

			//debug:
			//MessageBox.Show(f.Text);
			//===========================================================>

            //validate form title:
            if (f.Text == "Program1")
            {
                cls_output_controller._add_validation_ok("Click event is Ok!", 20);
            }
            else
            {
                cls_output_controller._add_validation_failed("Click event is NOT Ok!", 0);
            }

			//deactivate Form;
			f.Close();

            //----------------------------------------------->
            // validation code end:
            //----------------------------------------------->
			
			//return validation buffer:
            return(cls_output_controller._final_result());
        }
    }
    public class cls_output_controller
    {
        public string s_output_buffer = "";
        public int i_total_score = 0;
        public void _add_validation_ok(string s_value, int i_i_score)
        {
            i_total_score += i_i_score;
            s_output_buffer += "<div class='c_correct'>+ " + s_value + " +" + i_i_score + " балів!</div><br>\r\n";
        }
        public void _add_validation_failed(string s_value, int i_i_score)
        {
            i_total_score += i_i_score;
            //s_output_buffer += "<div class='c_wrong'>- " + s_value + " " + i_i_score + "</div><br>\r\n";
            s_output_buffer += "<div class='c_wrong'>- " + s_value + "</div><br>\r\n";
        }
        public string _final_result() {
            return this.s_output_buffer += "<hr><div class='c_correct'>Всього: " + i_total_score + " балів!</div><br>\r\n";
        }
    }
}