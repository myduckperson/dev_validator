<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>